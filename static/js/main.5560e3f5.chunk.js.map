{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","classNames","id","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTitle","visibleTodos","setTodos","setUsername","isNoTitle","setIsNoTitle","isNoUser","setIsNoUser","largestId","Math","max","handleChange","event","target","value","length","newValue","trimStart","replace","action","method","onSubmit","preventDefault","selectedUser","htmlFor","type","placeholder","onChange","required","disabled","currUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5560e3f5.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [visibleTodos, setTodos] = useState(todos);\n  const [username, setUsername] = useState('0');\n  const [isNoTitle, setIsNoTitle] = useState(false);\n  const [isNoUser, setIsNoUser] = useState(false);\n\n  const largestId = Math.max(...todos.map(todo => todo.id));\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>\n  | React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        if (value.length !== 0) {\n          setIsNoTitle(false);\n        }\n\n        // eslint-disable-next-line no-case-declarations\n        const newValue = value.trimStart().replace(/[^a-zA-Z0-9 ]/g, '');\n\n        return setTitle(newValue);\n\n      case 'username':\n        if (value) {\n          setIsNoUser(false);\n        }\n\n        return setUsername(value);\n\n      default:\n        return 0;\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const selectedUser = usersFromServer.find(user => (\n      user.name === username));\n\n    if (selectedUser && title.length !== 0) {\n      setTodos([\n        ...visibleTodos,\n        {\n          id: largestId + 1,\n          title: `${title}`,\n          completed: false,\n          userId: selectedUser.id,\n          user: selectedUser,\n        },\n      ]);\n      setTitle('');\n      setUsername('0');\n    }\n\n    if (title.length === 0) {\n      setIsNoTitle(true);\n    }\n\n    if (!selectedUser) {\n      setIsNoUser(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            {'Title: '}\n          </label>\n\n          <input\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Please enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          {isNoTitle && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            {'User: '}\n          </label>\n\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={handleChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(currUser => (\n              <option\n                key={currUser.id}\n                value={currUser.name}\n              >\n                {currUser.name}\n              </option>\n            ))}\n          </select>\n\n          {isNoUser && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}